<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog do Prof. Cleber - Programação</title><link href="https://clebersfonseca.github.io/" rel="alternate"></link><link href="https://clebersfonseca.github.io/feeds/programacao.atom.xml" rel="self"></link><id>https://clebersfonseca.github.io/</id><updated>2020-03-06T12:00:00-03:00</updated><entry><title>Criar um blog com Python, Pelican e github.io</title><link href="https://clebersfonseca.github.io/blog-python-pelican-github-io.html" rel="alternate"></link><published>2020-03-06T12:00:00-03:00</published><updated>2020-03-06T12:00:00-03:00</updated><author><name>Cleber Fonseca</name></author><id>tag:clebersfonseca.github.io,2020-03-06:/blog-python-pelican-github-io.html</id><summary type="html">&lt;p&gt;Vamos começar pelo princípio o que é esse tal de &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;? O Pelican é um sistema que gera sites estáticos sem necessidade de banco de dados ou backend (programação do lado do servidor). Ele funciona utilizando a linguagem Python e converte textos escritos em formatos específicos como por exemplo o …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vamos começar pelo princípio o que é esse tal de &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;? O Pelican é um sistema que gera sites estáticos sem necessidade de banco de dados ou backend (programação do lado do servidor). Ele funciona utilizando a linguagem Python e converte textos escritos em formatos específicos como por exemplo o Markdown, e sobre esse texto converte em arquivos .html que podem ser disponibilizados em qualquer servidor com acesso a web. O Pelican permite a instalação de plug-ins além de possuir vários temas (interface gráfica do site) a disposição gratuitamente, permitindo também que sejam criados temas personalizados a seu gosto.&lt;/p&gt;
&lt;p&gt;Então como iniciar um projeto utilizando o Pelican:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pelican
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Quando o comando assima for executado serão instalados além do Pelican vários outros pacotes que são utlizados por ele como: jinja2, pygments, pytz, six, entre outros.&lt;/p&gt;
&lt;p&gt;Além de instalar o próprio Pelican também devemos instalar a biblioteca Markdown para fazer com que o Pelican consigam “traduzir” o arquivo Markdown para HTML. Para instalar o Markdown usamos o comando&amp;gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depois dos pacotes e suas dependências instalados devemos iniciar o projeto Pelican para tanto será utilizado o comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Logo após a execução deste comando serão feitas diversas perguntas a respeito do seu projeto como pode ser visualizado abaixo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Where &lt;span class="k"&gt;do&lt;/span&gt; you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;#pasta onde você quer salvar seu projeto&lt;/span&gt;
What will be the title of this web site? &lt;span class="c1"&gt;#Titulo do site  &lt;/span&gt;
Who will be the author of this web site? &lt;span class="c1"&gt;#Seu nome aqui  &lt;/span&gt;
What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;en&lt;span class="o"&gt;]&lt;/span&gt; - &lt;span class="c1"&gt;#pt_BR para portugues brasil&lt;/span&gt;
Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Url do seu blog  &lt;/span&gt;
What is your URL prefix? &lt;span class="c1"&gt;#clebersfonseca.github.io  &lt;/span&gt;
Do you want to &lt;span class="nb"&gt;enable&lt;/span&gt; article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Paginação  &lt;/span&gt;
How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; - &lt;span class="c1"&gt;#Itens por paginação  &lt;/span&gt;
Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; - Sim - &lt;span class="c1"&gt;#Facilita muito  &lt;/span&gt;
Do you want an auto-reload &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Um server para testes  &lt;/span&gt;
Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;  - &lt;span class="c1"&gt;#Opcional  &lt;/span&gt;
Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Opcional  &lt;/span&gt;
Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Opcional  &lt;/span&gt;
Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Opcional  &lt;/span&gt;
Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Opcional  &lt;/span&gt;
Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; - &lt;span class="c1"&gt;#Opcional&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após responder a todas as perguntas será então criada a seguinte estrutura de pastas e arquivos dentro da pasta do seu projeto:&lt;/p&gt;
&lt;p&gt;├── content &lt;br /&gt;
├── output &lt;br /&gt;
├── pelicanconf.py &lt;br /&gt;
└── publishconf.py&lt;/p&gt;
&lt;p&gt;Para que serve cada um desses arquivos e pastas, vou explicar, a pasta &lt;strong&gt;contente&lt;/strong&gt; é onde serão colocados os arquivos Markdown (.md) para o Pelican interpretar e criar os arquivos HTML. A pasta &lt;strong&gt;output&lt;/strong&gt; será onde ficaram armazenados os arquivos criados pelo Pelican, arquivos HTML, arquivos do tema escolhido entre outros. O arquivo &lt;strong&gt;pelicanconf.py&lt;/strong&gt; é um arquivo de configuração do Pelican, vamos ver algumas de suas propriedades em breve. E o arquivo &lt;strong&gt;publishconf.py&lt;/strong&gt; possui algumas configurações do Pelican para o momento da publicação do projeto. Alguns outros arquivos podem ser criados dependendo das respostas do questionário do comando &lt;em&gt;pelican-quickstart&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos então criar o primeiro post do nosso blog para isso vamos criar um arquivo dentro da pasta &lt;strong&gt;contente&lt;/strong&gt; do nosso projeto, como estou utilizando Markdown para criação dos posts o arquivo irá se chamar &lt;strong&gt;hello.md&lt;/strong&gt;, e terá o seguinte conteúdo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Title: Hello Pelican!  
Date: 2020-03-06 12:00  
Category: Python  
Tags: pelican, markdown  
Slug: primeiro-artigo  
Author: Cleber Fonseca 
Status: published
Summary: Um resumo sobre o post do Pelican

&lt;span class="gh"&gt;#&lt;/span&gt;Testando nosso primeiro post no Pelican

Pelican é um gerador de páginas estáticas criado em python para facilitar nossa vida, na criação de blogs, landingpages ou site estáticos.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após a criação do documento devemos então gerar os arquivos que serão fornecidos aos usuários como uma página HTML normal. Para tanto devemos usar o comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;contente&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ao executar esse comando o que estamos fazendo é dizer ao Pelican que queremos gerar os arquivos na pasta &lt;strong&gt;content&lt;/strong&gt; conforme as configurações existentes no arquivo &lt;strong&gt;pelicanconf.py&lt;/strong&gt;. Assim os arquivos HTML serão criados, juntamente com os arquivos estáticos (CSS, JS, Imagens e outros) necessários para a construção da interface.&lt;/p&gt;
&lt;p&gt;Mais informações a respeito do Pelican podem ser obtidas na &lt;a href="https://docs.getpelican.com/en/stable/"&gt;documentação&lt;/a&gt; do mesmo.&lt;/p&gt;
&lt;h2&gt;Publicar no Github Pages&lt;/h2&gt;
&lt;p&gt;Como a ideia deste post é demonstrar como hospedar o nosso blog no Github pages vamos então instalar o pacote que fará a preparação do nosso site para subir para o github. O comando utilizado é:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install ghp-import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após a conclusão da instalação poderemos rodar o comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ghp-import -m &lt;span class="s2"&gt;&amp;quot;Generate Pelican site&amp;quot;&lt;/span&gt; --no-jekyll -b master output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este comando cria um "&lt;em&gt;commit&lt;/em&gt;" para o Github que posteriormente será enviado para o servidor. &lt;/p&gt;
&lt;p&gt;Mas antes vamos criar o repositório que receberá nossa página. Para isso você deve ter uma conta do Github ativa, acessando o Github você pode criar um novo repositório, no caso da criação do blog o mesmo de possuir o seguinte nome: "&lt;strong&gt;nome-do-repositorio&lt;/strong&gt;.github.io" obrigatoriamente ele deve terminar com ".github.io". Além disso o repositório deve ser marcado como público.&lt;/p&gt;
&lt;p&gt;Após essa criação devemos adicionar o nosso repositório ao projeto com o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote add origin git@github.com:seu-usuario/seuusuario.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lembrando que neste caso estou utilizando ssh para conexão com o github, mas o comando correto aparecerá na página inicial do repositório até que seja enviado algum arquivo para o mesmo. Após a inclusão do repositório ao projeto podemos enviar o código fonte ao servidor do Github através do comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enviando assim o nosso blog para o github. Após esse envio devemos informar ao Github que o nosso repositório é um Github page para tanto devemos acessar a aba &lt;em&gt;Settings&lt;/em&gt; do nosso repositório e rolar a página até a parte do Github Pages e marcar qual o &lt;em&gt;branch&lt;/em&gt; ou pasta dentro do &lt;em&gt;branch&lt;/em&gt; estará a página, no meu caso como esse repositório é somente para o blog será selecionado o &lt;em&gt;branch&lt;/em&gt;, &lt;strong&gt;master&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Assim depois de alguns segundos ao digitar no navegador: &lt;strong&gt;https://nome-do-repositorio.github.io&lt;/strong&gt; veremos o nosso blog no ar.&lt;/p&gt;
&lt;p&gt;Lembrando que sempre que for adicionado um novo post ou página teremos de rodar os comandos abaixo para publicar o blog com as alterações no ar.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican contente -s pelicanconf.py -o output

ghp-import -m &lt;span class="s2"&gt;&amp;quot;Generate Pelican site&amp;quot;&lt;/span&gt; --no-jekyll -b master output

git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fontes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; &lt;br /&gt;
&lt;a href="https://github.com/"&gt;Github&lt;/a&gt;&lt;/p&gt;</content><category term="Programação"></category><category term="Programação"></category><category term="Python"></category><category term="Github"></category></entry></feed>